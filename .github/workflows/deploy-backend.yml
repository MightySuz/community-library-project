name: Deploy Backend to Azure App Service

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch:

# Ensure only one deploy for a given ref runs; cancel older queued ones
concurrency:
  group: backend-deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci --omit=dev
          else
            echo "No package-lock.json found; running npm install"
            npm install --omit=dev
          fi


      - name: Show files (debug)
        run: ls -al && cat package.json

      - name: Configure App Settings (enable Oryx build)
        uses: azure/appservice-settings@v1
        with:
          app-name: community-library-backend
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
          app-settings-json: |
            [
              { "name": "SCM_DO_BUILD_DURING_DEPLOYMENT", "value": "true", "slotSetting": false }
            ]

      - name: Archive artifact
        run: zip -r ../backend.zip . -x "**/tests/**" "**/coverage/**"

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: community-library-backend
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
          package: backend.zip

      - name: Curl health (post-deploy with retries)
        run: |
          for i in 1 2 3 4 5; do
            echo "Health check attempt $i";
            if curl -fsS https://community-library-backend.azurewebsites.net/api/health; then
              echo "Healthy"; exit 0; fi;
            sleep 10;
          done;
          echo "Health endpoint failed after retries"; exit 1
