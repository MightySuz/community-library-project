name: Deploy Backend (Monorepo Bundle)

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch:

concurrency:
  group: backend-clean-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Bundle backend folder with root node_modules
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install workspaces prod deps at root
        run: |
          if [ -f package-lock.json ]; then
            npm ci --omit=dev
          else
            npm install --omit=dev
          fi
          echo "Root install complete"; ls -1 backend/src | head
          test -f node_modules/express/package.json || (echo 'Express missing after install' && exit 1)

      - name: Create deploy directory (backend + node_modules)
        run: |
          rm -rf deploy
          mkdir -p deploy
          cp -R backend/* deploy/
          # Copy root node_modules (hoisted) into deploy/node_modules so backend can resolve deps
          rsync -a --exclude='*.log' --exclude='test' node_modules deploy/node_modules
          # Ensure package.json is backend's
          jq '. + { "private": false }' backend/package.json > deploy/package.json
          # Simple start script verification
          node -e "require('./deploy/package.json'); console.log('Package main:', require('./deploy/package.json').main)"
          ls -lh deploy | head
          du -sh deploy/node_modules | awk '{print "node_modules size: "$1}'

      - name: Zip deploy directory
        run: |
          cd deploy
          zip -r ../backend.zip . > /dev/null
          cd ..
          ls -lh backend.zip
          unzip -l backend.zip | grep server.js || true

      - name: Deploy zip (no build)
        uses: azure/webapps-deploy@v3
        with:
          app-name: community-library-backend
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
          package: backend.zip
          enable-oryx-build: false

      - name: Post-deploy health check (retry)
        run: |
          for i in 1 2 3 4 5; do
            echo "Attempt $i";
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://community-library-backend.azurewebsites.net/api/health || true)
            if [ "$STATUS" = "200" ]; then
              curl -fsS https://community-library-backend.azurewebsites.net/api/health; exit 0; fi
            sleep 12;
          done
          echo "Health endpoint not reachable"; exit 1
